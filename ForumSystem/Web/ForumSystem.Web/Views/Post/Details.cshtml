@model ForumSystem.Web.ViewModels.Questions.QuestionDetailsViewModel

@{
    ViewBag.Title = "Details";
}
<style>
    .postAutor {
        margin: 5px;
        float: left;
        width: 22%;
        background: #efeeef;
        border-radius: 6px;
        -webkit-border-radius: 6px;
        -moz-border-radius: 5px;
        -khtml-border-radius: 10px;
        min-height: 75px;
        text-align: center;
    }

    .postBody {
        margin: 5px;
        width: 75%;
        /*background: #efeeef;*/
        border-radius: 5px;
        min-height: 75px;
  
    }
    .content {
        font-weight: bolder;
    }
</style>

@*<h2>Question Details</h2>*@

<div>
  <h2>
        @Html.DisplayFor(model => model.Title)
    </h2>
    <div class=" row postBody">
        <div class="content">
            @Html.DisplayFor(model => model.Content)<hr />
        </div>
        <div>
            Author: <strong> @Html.DisplayFor(model => model.AuthorId)</strong> |
            Date: <strong> @Html.DisplayFor(model => model.Date)</strong>
            <div class="pull-right">
                <span class="badge" id="article-votes">@Model.Votes</span>
                Likes
            </div>
            <br />
           
            @if (User.Identity.IsAuthenticated && Model.UserCanVote)
            {
                @Ajax.ActionLink("(Vote)", "Vote", "Post", new { id = Model.Id }, new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "article-votes",
            HttpMethod = "POST",
            OnSuccess = "hideVoteButton"
        },
                 new { id = "vote-button", @class = "glyphicon glyphicon-thumbs-up pull-right" })
            }
            else if (!User.Identity.IsAuthenticated)
            {
               <br/>
                <h4 class=" text-center text-danger alert alert-danger" role="alert">
                    @Html.ActionLink("Log in to vote or comment!", "Login", "Account", null, new { @class = "alert-link" })
                </h4>
            }
            else if (!@Model.UserCanVote)
            {
                <div class=" pull-right">(You already like this :)</div>
            }
        </div>
    </div>
 
</div>
<div>
  
</div>
<br />
@*@if (Model.CountComm == 0)
 {
    <div id="firstComment"><h4>@Model.CountComm Comments</h4><p>(Write the fist comment)</p></div>
 }
 else
 {
    <div><h4>@Model.CountComm Comments</h4></div>

 }*@
<h4> Comments(@Model.Comments.Count)</h4><hr />
<div id="Comments" class="row">
    @foreach (var comment in Model.Comments.Where(x=>x.ParentId==null))
    {
        @Html.Partial("_CommentPartial", comment)
        <div id="nestedComments"></div>
        foreach (var x in Model.Comments.Where(x=>x.ParentId==comment.Id))
        {
  
        }
    }
</div>
@if (User.Identity.IsAuthenticated)
{
    using (Ajax.BeginForm("PostComment","Post", new {id =Model.Id}, new AjaxOptions 
    { HttpMethod = "POST",
        InsertionMode = InsertionMode.InsertAfter,
        UpdateTargetId = "Comments",
        OnFailure = "commentPostFailure" }))
    {
        @Html.Hidden("PostId", Model.Id)
        @Html.TextArea("comment")
        @Html.AntiForgeryToken()
        <br />
        <input type="submit" value="Comment" class="btn btn-default" onclick="hideFirstComment" />
    }
}

@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>
        function commentPostFailure() {
            alert("Error");
        }

        function hideVoteButton() {
            $("#vote-button").hide();
        }

        function commentPostFailure() {
            alert("Error");
        }

        function hideVoteButton() {
            $("#vote-button").hide();
        }

        function hideFirstComment() {
            if ($('#Comments').innerHTML!=null) {
                $('#firstComment').hide();

            }
            
        }

    </script>
}

<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |*@
    @Html.ActionLink("Back to List", "Index", new{id =Model.TagId})
</p>
