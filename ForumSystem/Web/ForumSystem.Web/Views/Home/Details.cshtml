@model ForumSystem.Web.ViewModels.Questions.QuestionDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Question Details</h2>

<div>
    
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.Content)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Content)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AuthorId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AuthorId)
        </dd>
        
        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>
        
    </dl>
</div>
<div>
    <div class="">
        <span class="badge" id="article-votes">@Model.Votes</span>
       Likes
    </div><br />
    @*<div class="label label-success pull-right"> Likes <span id="article-votes">@Model.Votes</span></div><br />*@
    @if (User.Identity.IsAuthenticated && Model.UserCanVote )
    {
        @Ajax.ActionLink("(Vote)","Vote", new { id = Model.Id }, new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "article-votes",
            HttpMethod = "POST",
            OnSuccess = "hideVoteButton"
        },
                 new { id = "vote-button", @class = "glyphicon glyphicon-thumbs-up "  })
    }
    else if (!User.Identity.IsAuthenticated)
    {
        
            <h4 class=" text-center text-danger alert alert-danger" role="alert">
                @Html.ActionLink("Log in to vote or comment!", "Login", "Account",null, new { @class = "alert-link" })
            </h4>
      }else if (!@Model.UserCanVote)
      {
           <div class="label label-default">(You already like this :)</div>
      }
</div>
<br /><hr /> 
 @if (Model.CountComm == 0)
 {
    <div><h3>@Model.CountComm Comments</h3><p>(Write the fist comment)</p></div>
 }
 else
 {
    <div><h3>@Model.CountComm Comments</h3></div>

 }
<div id="Comments" class="row">
    @foreach (var comment in Model.Comments)
    {
        @Html.Partial("_CommentPartial", comment)
    }
</div>
@if (User.Identity.IsAuthenticated)
{
    using (Ajax.BeginForm("PostComment", new {id =Model.Id}, new AjaxOptions 
    { HttpMethod = "POST",
        InsertionMode = InsertionMode.InsertAfter,
        UpdateTargetId = "Comments",
        OnFailure = "commentPostFailure" }))
    {
        @Html.Hidden("PostId", Model.Id)
        @Html.TextArea("comment")
        @Html.AntiForgeryToken()
        <br />
        <input type="submit" value="Comment" class="btn btn-default" />
    }
}

@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>
        function commentPostFailure() {
            alert("Error");
        }

        function hideVoteButton() {
            $("#vote-button").hide();
        }

        function commentPostFailure() {
            alert("Error");
        }

        function hideVoteButton() {
            $("#vote-button").hide();
        }

    </script>
}

<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |*@
    @Html.ActionLink("Back to List", "Index")
</p>
